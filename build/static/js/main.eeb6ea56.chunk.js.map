{"version":3,"sources":["components/MainLists.js","context.js","components/ToDoItem.js","components/ToDoList.js","components/AddTodo.js","WrapperTodoList.js","components/AddOneList.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["MainLists","todoLists","removeOneMainList","setIndex","oneList","map","oneOfList","index","className","key","id","onClick","mainTitle","Context","React","createContext","ToDoItem","todo","onChange","toDoList","removeTodo","useContext","useState","editor","setEditor","title","text","setText","styleToDoItem","completed","type","checked","htmlFor","value","event","target","newList","element","slyles","ul","listStyle","margin","padding","ToDoList","props","style","todos","onToggle","AddTodo","onCreate","setValue","onSubmit","preventDefault","trim","WrapperTodoList","sendTodos","ind","getNewOneList","getTodos","undefined","pageOfItem","setTodos","useEffect","pageName","Provider","filter","concat","Date","now","length","AddOneList","onCreateList","ToDo","setTodoLists","visibleAddList","setHide","setInd","lengthOFlist","clonedLists","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eeb6ea56.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MainLists({ todoLists, removeOneMainList, setIndex }) {\r\n  const oneList = todoLists.map((oneOfList, index) => (\r\n    <li className=\"lists_left_side__OneMainList\" key={oneOfList.id}>\r\n      <div onClick={() => setIndex(index)}>{oneOfList.mainTitle}</div>\r\n\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => removeOneMainList(oneOfList.id)}\r\n      >\r\n        <i className=\"fas fa-trash-alt\"></i>\r\n      </button>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"lists_left_side__AllMainList\">{oneList} </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainLists;\r\n","import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Context from \"../context\";\r\n\r\nfunction ToDoItem({ todo, index, onChange, toDoList }) {\r\n  const { removeTodo } = useContext(Context);\r\n\r\n  const [editor, setEditor] = useState(false);\r\n  const [text, setText] = useState(todo.title);\r\n\r\n  let styleToDoItem = \"ToDoItem \";\r\n  if (todo.completed) {\r\n    styleToDoItem += \"done\";\r\n  }\r\n\r\n  function actionEnableEditor() {\r\n    setEditor(true);\r\n  }\r\n\r\n  function actionDisableEditor() {\r\n    let newList = [];\r\n    toDoList.map((element) => {\r\n      if (element.id === todo.id) element.title = text;\r\n      return newList;\r\n    });\r\n\r\n    setEditor(false);\r\n  }\r\n  function actionSaveEditor(event) {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!editor && (\r\n        <>\r\n          <li className={styleToDoItem}>\r\n            <span>\r\n              <input\r\n                id={todo.id}\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => onChange(todo.id)}\r\n              />\r\n              <strong> {index + 1} </strong>\r\n\r\n              <label htmlFor={todo.id}>{todo.title}</label>\r\n            </span>\r\n            <span className=\"space_for_button\">\r\n              <button\r\n                className=\"edit_title\"\r\n                type=\"edit\"\r\n                onClick={actionEnableEditor}\r\n              >\r\n                <i className=\"fas fa-pen\"></i>\r\n              </button>\r\n              <button onClick={() => removeTodo(todo.id)}>\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n              </button>\r\n            </span>\r\n          </li>\r\n        </>\r\n      )}\r\n\r\n      {editor && (\r\n        <li className={styleToDoItem}>\r\n          <span>\r\n            <input\r\n              className=\"imput_editor\"\r\n              type=\"text\"\r\n              checked={todo.completed}\r\n              value={text}\r\n              onChange={actionSaveEditor}\r\n            />\r\n          </span>\r\n          <span className=\"space_for_button\">\r\n            <button\r\n              className=\"ToDoItem__edit_title\"\r\n              type=\"edit\"\r\n              onClick={actionDisableEditor}\r\n            >\r\n              <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={() => removeTodo(todo.id)}>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </span>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\n\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nconst slyles = {\r\n  ul: { listStyle: \"none\", margin: 0, padding: 0 },\r\n};\r\n\r\nfunction ToDoList(props) {\r\n  return (\r\n    <ul style={slyles.ul}>\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <ToDoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            id={todo.id}\r\n            title={todo.title}\r\n            index={index}\r\n            onChange={props.onToggle}\r\n            toDoList={props.todos}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddTodo({ onCreate }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onCreate(value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"wrapper__form\" onSubmit={submitHandler}>\r\n      <input\r\n        className=\"wrapper__input\"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n      />\r\n      <button className=\"wrapper__button\" type=\"submit\">\r\n        Add todo\r\n      </button>{\" \"}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ToDoList from \"./components/ToDoList\";\r\nimport Context from \"./context\";\r\nimport AddTodo from \"./components/AddTodo\";\r\n\r\nfunction WrapperTodoList({ sendTodos, ind, getNewOneList }) {\r\n  let getTodos = [\r\n    {\r\n      id: 15,\r\n      completed: true,\r\n      title: \"You have created your first list!\",\r\n    },\r\n  ];\r\n\r\n  if (sendTodos[ind].pageOfItem !== undefined) {\r\n    getTodos = sendTodos[ind].pageOfItem;\r\n  }\r\n\r\n  const [todos, setTodos] = useState(getTodos);\r\n  useEffect(() => {\r\n    // Обновляем\r\n    setTodos(getTodos);\r\n  }, [ind]);\r\n\r\n  let pageName = sendTodos[ind].mainTitle;\r\n\r\n  function toggleTodo(id) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n\r\n  function removeTodo(id) {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  }\r\n\r\n  function addTodo(title) {\r\n    setTodos(\r\n      todos.concat([\r\n        {\r\n          title,\r\n          id: Date.now(),\r\n          completed: false,\r\n        },\r\n      ])\r\n    );\r\n    getNewOneList(getTodos);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNewOneList(todos);\r\n  }, [todos]);\r\n\r\n  return (\r\n    <Context.Provider value={{ removeTodo }}>\r\n      <div className=\"wrapper\">\r\n        <h1 className=\"wrapper__title\">\r\n          <span className=\"wrapper__title--font\">{pageName} </span>{\" \"}\r\n        </h1>\r\n        <AddTodo onCreate={addTodo} />\r\n        {todos.length ? (\r\n          <ToDoList todos={todos} onToggle={toggleTodo} />\r\n        ) : (\r\n          <p>No todos !</p>\r\n        )}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default WrapperTodoList;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddOneList({ onCreateList }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onCreateList(value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"wrapper__form noPad\" onSubmit={submitHandler}>\r\n      <input\r\n        className=\"wrapper__input\"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n      />\r\n\r\n      <button className=\"wrapper__button\" type=\"submit\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddOneList;\r\n","import React from \"react\";\r\nimport \"./style_todo.css\";\r\nimport MainLists from \"./components/MainLists\";\r\nimport { useState, useEffect } from \"react\";\r\nimport WrapperTodoList from \"./WrapperTodoList\";\r\nimport AddOneList from \"./components/AddOneList\";\r\n\r\nfunction ToDo() {\r\n  const [todoLists, setTodoLists] = useState([\r\n    {\r\n      id: 5,\r\n      mainTitle: \"My app\",\r\n      pageOfItem: [\r\n        {\r\n          id: 1,\r\n          completed: true,\r\n          title: \"test the program!\",\r\n        },\r\n        {\r\n          id: 2,\r\n          completed: true,\r\n          title: \"Make good style and add fond\",\r\n        },\r\n\r\n        {\r\n          id: 3,\r\n          completed: false,\r\n          title: \"get feedback about app\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      mainTitle: \"Shop list\",\r\n      pageOfItem: [\r\n        {\r\n          id: 12,\r\n          completed: false,\r\n          title: \"Milk\",\r\n        },\r\n        {\r\n          id: 13,\r\n          completed: false,\r\n          title: \"apples 1 kg\",\r\n        },\r\n        {\r\n          id: 14,\r\n          completed: true,\r\n          title: \"Beer and snacks\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  // Add to local storage\r\n  // useEffect(() => {\r\n  //   const row = localStorage.getItem(\"todoLists\") || [];\r\n  //   setTodoLists(JSON.parse(row));\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"todoLists\", JSON.stringify(todoLists));\r\n  // }, [todoLists]);\r\n\r\n  const [visibleAddList, setHide] = useState(false);\r\n  const [ind, setInd] = useState(0);\r\n\r\n  function removeOneMainList(id) {\r\n    let lengthOFlist = todoLists.length;\r\n    let lastElemIndex = lengthOFlist - 1;\r\n\r\n    if (ind === lastElemIndex) {\r\n      setInd(0);\r\n    }\r\n    setTodoLists(todoLists.filter((oneOfList) => oneOfList.id !== id));\r\n  }\r\n\r\n  function addTodoList(mainTitle) {\r\n    setTodoLists(\r\n      todoLists.concat([\r\n        {\r\n          mainTitle,\r\n          id: Date.now(),\r\n          pageOfItem: [],\r\n        },\r\n      ])\r\n    );\r\n    setHide(false);\r\n  }\r\n\r\n  function getNewOneList(todos) {\r\n    const clonedLists = [...todoLists];\r\n    clonedLists[ind].pageOfItem = todos;\r\n    setTodoLists(clonedLists);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainbox\">\r\n      <div className=\"lists_left_side\">\r\n        <i\r\n          className=\"fas fa-plus-circle lists_left_side__PlusLists\"\r\n          onClick={() => setHide(true)}\r\n        ></i>\r\n\r\n        {visibleAddList && (\r\n          <>\r\n            <AddOneList onCreateList={addTodoList} />\r\n          </>\r\n        )}\r\n\r\n        {todoLists.length ? (\r\n          <MainLists\r\n            todoLists={todoLists}\r\n            removeOneMainList={removeOneMainList}\r\n            setIndex={setInd}\r\n          />\r\n        ) : (\r\n          <p className=\"lists_left_side__Click_here\">\r\n            Click <i className=\"fas fa-arrow-up\"></i> here\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {todoLists.length ? (\r\n        <WrapperTodoList\r\n          sendTodos={todoLists}\r\n          ind={ind}\r\n          getNewOneList={getNewOneList}\r\n        />\r\n      ) : (\r\n        <p className=\"SurpriseYourself\">\r\n          {\" \"}\r\n          Surprise yourself, create your to-do list!\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction App() {\r\n  return <ToDo />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}